<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zft.mybatis.mapper.RoleMapper">

    <!--开启二次缓存-->
    <cache />

    <resultMap id="roleMapper" type="role">
        <!--<result property="id" column="id" />-->
        <id property="id" column="id" />
        <result property="roleName" column="role_name" jdbcType="VARCHAR" javaType="string" />
        <result  property="note" column="note" typeHandler="com.zft.mybatis.typeHandler.MyTypeHandler" />
    </resultMap>

    <!-- sql 元素-->
    <!--<sql id="roleCols" >-->
        <!--id,role_name as roleName,note-->
    <!--</sql>-->


    <sql id="roleCols" >
        ${alias}.id,${alias}.role_name as roleName,${alias}.note
    </sql>




    <!--<select id="getRole" parameterType="long" resultType="role">-->
        <!--select id,-->
        <!--role_name as roleName-->
        <!--from t_role-->
        <!--where id = #{id}-->
    <!--</select>-->

    <select id="getRole" parameterType="long" resultType="role" flushCache="false" useCache="true">
        select
            <!--<include refid="roleCols" />-->
            <include refid="roleCols">
                <property name="alias" value="t" />
            </include>
        from t_role t
        where id = #{id}
    </select>

    <insert id="insertRole" parameterType="role"
        useGeneratedKeys="true" keyProperty="id">
        insert into t_role(role_name,note) values (#{roleName}, #{note})
    </insert>

    <update id="updateRole" parameterType="long">
        update t_role set role_name = #{roleName},note = #{note} where id = #{id}
    </update>

    <delete id="deleteRole" parameterType="long">
        delete from t_role where id = #{id}
    </delete>

    <select id="getList" parameterType="string" resultType="role">
        select id,
            role_name as roleName,
            note as note
        from t_role
        where role_name like concat('%',#{roleName},'%')
    </select>


    <select id="findRoles" parameterType="string" resultMap="roleMapper">
        select id,
            role_name,
            note
        from t_role
        where role_name like concat('%',#{roleName, jdbcType=VARCHAR,javaType=string},'%')
    </select>

    <select id="findRoles2" parameterType="string" resultMap="roleMapper">
        select id,
            role_name,
            note
        from t_role
        where note like concat('%',#{note, typeHandler=com.zft.mybatis.typeHandler.MyTypeHandler},'%')

    </select>

    <select id="findRolesByMap" parameterType="map" resultType="role">
        select id,
            role_name as roleName,
            note
        from t_role
        where role_name like concat('%', #{roleName}, '%')
        and note like concat('%', #{note}, '%')
    </select>

    <select id="findRolesByAnnotation" resultType="role">
        select id,
            role_name as roleName,
            note
        from t_role
        where role_name like concat('%', #{roleName}, '%')
        and note like concat('%', #{note}, '%')
    </select>

    <select id="findRolesByBean" resultType="role" parameterType="roleParams">
        select id,
            role_name as roleName,
            note
        from t_role
        where role_name like concat('%',#{roleName},'%')
    </select>

    <select id="findByMix" resultType="role" >
         select id,
            role_name as roleName,
            note
        from t_role
        where role_name like concat('%',#{params.roleName},'%')
        limit #{page.start}, #{page.limit}
    </select>

    <!-- 分页参数RowBounds-->
    <select id="findByRowBounds" resultType="role" >
        select id,
            role_name as roleName,
            note
        from t_role
        where role_name like concat('%', #{roleName}, '%')
        and note like concat('%', #{note}, '%')
    </select>

    <select id="testIf" parameterType="long" resultType="role">
        select id,
            role_name as roleName,
            note
        from t_role
        where 1 = 1
        <if test="id != null and id != ''">
            and id = #{id}
        </if>
    </select>


    <!--多条件查询使用choose when otherwise, 模板如下-->
   <!-- <select id="">
        <choose>
            <when test="">

            </when>
            <when test="">

            </when>
            <otherwise>

            </otherwise>
        </choose>
    </select> -->

</mapper>    